{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["QueryMeter","degrees","percentage","roundedPercentage","maxHits","totalHits","style","getStyles","container","overflow","padding","props","display","flexDirection","position","background","borderRadius","minHeight","maxHeight","wrapper","width","bottomLayer","top","left","height","zIndex","colorLayer","transformOrigin","transitionTimingFunction","transitionProperty","transitionDuration","coverLayer","bottom","transform","bottomCoverLayer","right","margin","seperator","backgroundColor","fontSize","textAlign","cursor","detailsContainer","flex","justifyContent","alignItems","paddingTop","labelText","color","labelNumber","fontWeight","refresh","this","strengthMode","Math","componentDidMount","arrayOfnumbersToAnimate","getInfoData","infoData","element","refs","state","previous","current","getPercentageData","percentageData","triggerAnimation","shouldComponentUpdate","conditionalProps","i","nextProps","conditionalState","nextState","componentDidUpdate","prevProps","componentWillUnmount","initElementsOfNumbers","obj","Date","animateNumbers","window","step","timestamp","array","span","timespan","positionInTime","progress","myReq","renderSlices","arrayOfSlices","key","renderPercentage","data-auto","title","ref","renderInfo","render","Component","thickness","slices","sliceGap","duration","fillColor","fillBackgroundColor","containerSpacing","percentageStyle","infoNumbersStyle","infoTextStyle","showInfo","showPercentage","topText","bottomText","firstAnimationDelay","App","constructor","super","isStrengthMode","slicesGap","transitionTiming","randomizeResults","_this","floor","random","setState","boxShadow","border","outline","onClick","e","id","enable-background","viewBox","xmlns","cx","cy","r","d","name","type","checked","onChange","htmlFor","value","target","disabled","ReactDOM","document","getElementById"],"mappings":"0dAEMA,c,QACJ,cAAmB,aACjB,wBAEA,MAAa,CACXC,QADW,EAEXC,WAFW,EAGXC,kBAHW,EAIXC,QAJW,EAKXC,UALW,EAMXC,MAAO,YAAe,EAAf,QATQ,E,kHAanBC,sBA6GE,MA5Ga,CACXC,UAAW,CACTC,SADS,SAETC,QAASC,oBAFA,EAGTC,QAHS,cAITC,cAJS,SAKTC,SALS,WAMTC,WAAYJ,EANH,gBAOTK,aAAY,EAAKL,QAAL,QAA0BA,QAP7B,SAQTM,UAAYN,EAAD,eAA6EA,QAA7E,EARF,KAQ6BA,UAAkBA,EAA7C,sBACXO,UAAYP,EAAD,eAA6EA,QAA7E,OAA2BA,UAAkBA,EAA7C,uBAEbQ,QAAS,CACPC,MAAOT,EADA,MAEPM,UAAWN,QAFJ,EAGPO,UAAWP,QAHJ,EAIPG,SAJO,WAKPE,aAAY,EAAKL,QAAL,QAA0BA,QAA1B,UAEdU,YAAa,CACXP,SADW,WAEXQ,IAFW,EAGXC,KAHW,EAIXR,WAAYJ,EAJD,oBAKXK,aAAY,EAAKL,QAAL,QAA0BA,QAL3B,SAMXS,MAAOT,EANI,MAOXa,OAAQb,QAPG,EAQXc,OAAQ,GAEVC,WAAY,CACVZ,SADU,WAEVQ,IAAKX,QAFK,EAGVY,KAHU,EAIVR,WAAYJ,EAJF,UAKVK,aAAc,OAAF,EAASL,QAAT,QAA8BA,QALhC,KAMVS,MAAOT,EANG,MAOVa,OAAQb,QAPE,EAQVc,OARU,EASVE,gBATU,SAUVC,yBAA0BjB,EAVhB,iBAWVkB,mBAXU,MAYVC,mBAAuBnB,EAAL,eAEpBoB,WAAY,CACVjB,SADU,WAEVkB,OAFU,EAGVT,KAHU,MAIVR,WAAYJ,EAJF,gBAKVK,aAAY,EAAKL,QAAL,QAA0BA,QAL5B,SAMVS,MAAOT,QANG,EAMWA,YACrBa,OAAQb,UAAkBA,EAPhB,UAQVsB,UARU,qBASVR,OAAQ,GAEVS,iBAAkB,CAChBV,OAAQb,EADQ,iBAEhBI,WAAYJ,EAFI,gBAGhBG,SAHgB,WAIhBkB,OAJgB,EAKhBT,KALgB,EAMhBY,MANgB,EAOhBC,OAAQ,KAAKzB,EAAP,iBAPU,KAQhBc,OARgB,EAShBb,QAASD,yBAAiC,QAE5C0B,UAAW,CACTvB,SADS,WAETkB,OAAQ,EAAIrB,WAFH,EAGTY,KAHS,OAITH,MAAO,EAAIT,QAJF,EAKTa,OAAQb,EALC,SAMTc,OANS,EAOThB,SAPS,SAQTkB,gBARS,eASTZ,WAAYJ,EAAM2B,iBAEpBpC,WAAY,CACV+B,UADU,iBAEVnB,SAFU,WAGVQ,IAHU,EAIVF,MAJU,GAKVG,MALU,GAMVgB,SANU,GAOVC,UAPU,SAQVb,gBARU,aASVc,OAAQ,WAEVC,iBAAkB,CAChBC,KADgB,EAEhBnB,OAFgB,OAGhBX,cAHgB,SAIhB+B,eAJgB,SAKhBC,WALgB,SAMhBjC,QANgB,OAOhB2B,SAPgB,GAQhBO,WAAY,GAEdC,UAAW,CACTR,SADS,GAETS,MAAO,WAETC,YAAa,CACXC,WADW,IAEXX,SAFW,GAGXS,MAAO,a,EAObG,oBACE,IAAIC,KAAJ,aACA,IAAI9C,EAAQ8C,KAAK7C,UAAjB,GACIH,EAAUO,EAAd,QACI0C,EAAe1C,EAAnB,aACIN,EAAYM,aAAhB,EACIT,EACFG,UAEIA,QAEAgD,EACA,IAAOhD,EAAD,EADM,IAEXA,EAAD,EAPN,KAQIH,MAAJ,KAAmCA,KACnC,IAAIC,EAAoBmD,WAAxB,GACI3C,EAAJ,eAAyBA,mBACzB,IAAIV,EAAW,IAAD,EAAd,IAEAmD,KAAA,SAAc,CACZlD,WADY,EAEZC,kBAFY,EAGZF,QAHY,EAIZG,QAJY,EAKZC,UALY,EAMZC,Y,EAIJiD,6BACE,IAAIC,EAA0BJ,KAA9B,cACAI,EAA0BA,SAA+BJ,KAAzDI,qBACAJ,KAAA,qB,EAGFK,uBACE,IAAIC,EAAJ,GAeA,OAdAA,OACE,CACEC,QAASP,KAAKQ,KADhB,UAEEC,MAFF,YAGEC,SAHF,EAIEC,QAAS,GAEX,CACEJ,QAASP,KAAKQ,KADhB,QAEEC,MAFF,UAGEC,SAHF,EAIEC,QAAS,IAGb,G,EAGFC,6BACE,IAAIC,EAAJ,GAOA,OANAA,OAAoB,CAClBN,QAASP,KAAKQ,KADI,WAElBC,MAFkB,aAGlBC,SAHkB,EAIlBC,QAAS,IAEX,G,EAGFG,6BACEd,KAAA,yBACAA,KAAA,QAAaA,KAAb,OACAA,KAAA,mB,EAGFe,oCAEE,IADA,IAAIC,EAAmB,CAAC,UAAxB,cACSC,EAAT,EAAgBA,EAAID,EAApB,OAA6CC,IAC3C,GAAIjB,KAAKzC,MAAMyD,EAAX,MAAoCE,EAAUF,EAAlDC,IACE,OAAO,EAIX,IADA,IAAIE,EAAmB,CAAC,UAAW,YAAnC,WACSF,EAAT,EAAgBA,EAAIE,EAApB,OAA6CF,IAC3C,GAAIC,EAAUC,EAAVD,MAAmCE,EAAUD,EAAjD,IACE,OAAO,EAEX,U,EAGFE,+BACMC,IAActB,KAAlB,QACKsB,aAAuBtB,KAAKzC,MAA/B,UAA+CyC,KAAKc,iBAAiBd,KAAtB,eAC5CsB,mBAA6BtB,KAAKzC,MAArC,gBAA2DyC,KAAKc,iBAAiBd,KAAtB,qBAC3DA,KAAA,QAAaA,KAAb,S,EAIJuB,gCACEvB,KAAA,gB,EAGFwB,kCAA+C,WAE7CpB,WAAgC,SAAAqB,GAC1BA,EAAJ,UACAA,oBAAwBA,UAAxBA,iBACAA,OAAW,QAAWA,EAAtBA,OACAA,YAAgBC,KAAhBD,W,EAIJE,2BAAsB,WAkDZC,8BA/CG,SAAPC,EAAQC,GACVC,WAAc,SAAAN,GACZ,GAAIA,EAAJ,SAEA,GAAIA,SAAa,QAAWA,EAA5B,OAEE,GAAIA,aAAiB,QAAWA,EAAhC,OAA4C,CAE1C,IAAIO,EAAOP,OAAWA,EAAtB,SACI/D,EAAWsE,GAAQP,OAAWA,EAAXA,SAAD,GAAH,EAAnB,EACAA,YAAgBC,WAAa,iBAA7BD,EAEAA,WAAeA,EAAfA,KACAA,OAAW,QAAWA,EAAtBA,YAMAA,YAAgBC,KAAhBD,MAEAA,WAAeA,EAAfA,QACAA,OAAW,QAAWA,EAAtBA,OAKJ,GAAIA,WAAeA,EAAnB,KAIE,OAFAA,YAAgBC,KAAhBD,WACAA,WAAeA,EAAfA,MAKF,IAAIQ,EAAWP,WAAaD,EAA5B,UACIS,EAAiBhC,SACnB+B,GAAY,kBADO/B,GAArB,GAIIiC,GAAYV,OAAWA,EAAZ,UAAf,EACAA,UAAcA,WAAdA,EACAA,oBAAwBvB,WAAWuB,EAAXvB,SAAxBuB,qBAGMG,6BAARQ,O,EAKJC,wBAGE,IAFA,IAAIC,EAAJ,GAESrB,EAAT,EAAgBA,EAAIjB,KAAKzC,MAAzB,OAAuC0D,IACrCqB,OACE,yBACEC,IADF,EAEErF,MAAK,KACA8C,KAAKS,MAAMvD,MADX,WAEH2B,UAAW,UAAW,IAAMmB,KAAKzC,MAAZ,OAAZ,cAMjB,U,EAGFiF,4BACE,GAAKxC,KAAKzC,MAAV,eACA,OACE,yBACEkF,YADF,aAEEvF,MAAK,KACA8C,KAAKS,MAAMvD,MADX,WAEA8C,KAAKzC,MAJZ,iBAMEmF,MAAO1C,KAAKS,MAAM3D,WAAa,KAE/B,0BAAM6F,IAAI,eATd,M,EAcFC,sBACE,GAAK5C,KAAKzC,MAAV,SACA,OACI,yBAAKL,MAAK,KACL8C,KAAKS,MAAMvD,MADN,iBAEL8C,KAAKzC,MAFA,qBAIN,yBAAKL,MAAO,CAAEM,QAAF,OAAmBiC,WAAY,aACvC,0BACIgD,YADJ,uBAEIvF,MAAK,KACF8C,KAAKS,MAAMvD,MADT,UAEF8C,KAAKzC,MAFH,eAGL6B,UAAW,YAGVY,KAAKzC,MATd,SAWI,0BACIkF,YADJ,OAEIE,IAFJ,YAGIzF,MAAK,KACF8C,KAAKS,MAAMvD,MADT,YAEF8C,KAAKzC,MAFH,qBAMT,yBAAKL,MAAO,CAAEM,QAAF,OAAmBiC,WAAY,aAC3C,0BACIvC,MAAK,KACF8C,KAAKS,MAAMvD,MADT,UAEF8C,KAAKzC,MAFH,gBAKJyC,KAAKzC,MAPV,YASA,0BACIkF,YADJ,gBAEIE,IAFJ,UAGIzF,MAAK,KACF8C,KAAKS,MAAMvD,MADT,YAEF8C,KAAKzC,MAFH,uB,EAUrBsF,kBACE,OACE,yBAAK3F,MAAO8C,KAAKS,MAAMvD,MAAME,WACzB,yBAAKF,MAAO8C,KAAKS,MAAMvD,MAAMa,SAC3B,yBAAKb,MAAO8C,KAAKS,MAAMvD,MAAMe,cAC7B,yBACIf,MAAK,KACF8C,KAAKS,MAAMvD,MADT,YAEL2B,UAAW,UAAUmB,KAAKS,MAAjB,kBAGRT,KARP,oBAUE,yBAAK9C,MAAO8C,KAAKS,MAAMvD,MAAMyB,YAAaqB,KAV5C,cAWM,6BAAMA,KAZhB,iBAcI,yBAAK9C,MAAO8C,KAAKS,MAAMvD,MAAM4B,qB,EAlYnClC,CAAmBkG,aAwYzBlG,eAA0B,CACxBoB,MADwB,IAExB+E,UAFwB,GAGxBC,OAHwB,EAIxBC,SAJwB,EAKxBC,SALwB,IAMxB1E,yBANwB,cAOxBU,gBAPwB,OAQxBiE,UARwB,yEAUxBC,oBAVwB,OAWxBC,iBAXwB,GAYxBpD,cAZwB,EAaxBqD,gBAbwB,GAcxBC,iBAdwB,GAexBC,cAfwB,GAgBxBC,UAhBwB,EAiBxBC,gBAjBwB,EAkBxBC,QAlBwB,eAmBxBC,WAnBwB,aAoBxBC,oBApBwB,EAqBxB5G,UArBwB,IAsBxBD,QAAS,K,cC3ZX,MAAM8G,UAAYhB,YAEdiB,YAAYxG,GACRyG,MAAMzG,GACNyC,KAAKS,MAAQ,CACTwD,gBAAgB,EAChBhH,UAAW,EACXD,QAAS,EACTgB,MAAO,IACP+E,UAAW,GACXC,OAAQ,EACRkB,UAAW,EACXhB,SAAU,IACViB,iBAAkB,gCAClBjF,gBAAiB,UACjBiE,UAAW,mDACXC,oBAAqB,OACrBC,iBAAkB,GAClBI,UAAU,EACVC,gBAAgB,GAIxBU,iBAAiBC,GACb,IAAIrH,EAAUkD,KAAKoE,MAAsB,MAAhBpE,KAAKqE,UAC1BtH,EAAYiD,KAAKoE,MAAMpE,KAAKqE,SAAWvH,GAC3CqH,EAAMG,SAAS,CAAEvH,YAAWD,YAGhC6F,SAAU,MAAD,EAiBD7C,KAAKS,MAfLxD,EAFC,EAEDA,UACAD,EAHC,EAGDA,QACAiH,EAJC,EAIDA,eACAjG,EALC,EAKDA,MACA+E,EANC,EAMDA,UACAC,EAPC,EAODA,OACAkB,EARC,EAQDA,UACAhB,EATC,EASDA,SACAiB,EAVC,EAUDA,iBACAjF,EAXC,EAWDA,gBACAiE,EAZC,EAYDA,UACAC,EAbC,EAaDA,oBACAC,EAdC,EAcDA,iBACAI,EAfC,EAeDA,SACAC,EAhBC,EAgBDA,eAGJ,OACI,yBAAKxG,MAAO,CAACM,QAAS,QAASQ,MAAO,OAAQoB,UAAW,WACrD,yBAAKlC,MAAO,CAAEM,QAAS,cAAeC,cAAe,SAAUH,QAAS,iBAAkBmH,UAAW,mCAAoC7G,aAAc,EAAGD,WAAY,YAClK,kBAAC,EAAD,CACIV,UAAWA,EACXD,QAASA,EACTgB,MAAOA,EACP+E,UAAWA,EACXC,OAAQA,EACRC,SAAUiB,EACVhB,SAAUA,EACViB,iBAAkBA,EAClBjF,gBAAiBA,GAAmB,OACpCiE,UAAWA,EACXC,oBAAqBA,EACrBC,iBAAkBA,EAClBpD,aAAcgE,EACdR,SAAUA,EACVC,eAAgBA,EAChBC,QAAQ,kBACRC,WAAW,gBACXN,gBAAiB,CAAC1D,MAAO,QACzB2D,iBAAkB,CAAC3D,MAAO,QAC1B4D,cAAe,CAAC5D,MAAO,UAE3B,4BAAQ1C,MAAO,CAACS,WAAY,UAAWwB,SAAU,GAAIH,OAAQ,YAAa0F,OAAQ,iBAAkBrF,OAAQ,UAAW/B,QAAS,GAAIqH,QAAS,OAAQ3G,MAAO,IAAKI,OAAQ,IAAKR,aAAc,MAAO6G,UAAW,qCAAsCG,QAASC,GAAK7E,KAAKoE,iBAAiBpE,OAAO,yBAAK8E,GAAG,SAASC,oBAAkB,kBAAkB3G,OAAO,KAAK4G,QAAQ,cAAchH,MAAM,KAAKiH,MAAM,8BAA6B,2BAAG,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,SAASC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,0BAAMC,EAAE,kxBAAixB,4BAAQH,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,OAAM,4BAAQF,GAAG,UAAUC,GAAG,UAAUC,EAAE,SAA3iD,aACA,yBAAKlI,MAAO,CAACM,QAAS,OAAQC,cAAe,SAAU0B,SAAU,KAC7D,yBAAKjC,MAAO,CAACM,QAAS,OAAQiC,WAAY,WACtC,2BAAO6F,KAAK,eAAeC,KAAK,WAAWC,QAASvB,EAAgBwB,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACP,gBAAiBA,MACnH,2BAAOyB,QAAQ,gBAAf,0BAEJ,yBAAKxI,MAAO,CAACM,QAAS,OAAQiC,WAAY,WACtC,2BAAO6F,KAAK,WAAWC,KAAK,WAAWC,QAAS/B,EAAUgC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACf,UAAWA,MACnG,2BAAOiC,QAAQ,YAAf,sBAEJ,yBAAKxI,MAAO,CAACM,QAAS,OAAQiC,WAAY,WACtC,2BAAO6F,KAAK,iBAAiBC,KAAK,WAAWC,QAAS9B,EAAgB+B,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACd,gBAAiBA,MACrH,2BAAOgC,QAAQ,kBAAf,4BAEJ,6BACA,2BAAOA,QAAQ,SAAf,SACA,2BAAOJ,KAAK,QAAQC,KAAK,SAASI,MAAO3H,EAAOyH,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACxG,MAAwB,EAAjB6G,EAAEe,OAAOD,UAC9F,2BAAOD,QAAQ,aAAf,aACA,2BAAOJ,KAAK,YAAYC,KAAK,SAASI,MAAO5C,EAAW0C,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACzB,UAA4B,EAAjB8B,EAAEe,OAAOD,UAC1G,2BAAOD,QAAQ,UAAf,UACA,2BAAOJ,KAAK,SAASC,KAAK,SAASI,MAAO3C,EAAQyC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACxB,OAAyB,EAAjB6B,EAAEe,OAAOD,UACjG,2BAAOD,QAAQ,aAAf,cACA,2BAAOJ,KAAK,YAAYC,KAAK,SAASI,MAAOzB,EAAWuB,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACN,UAA4B,EAAjBW,EAAEe,OAAOD,UAC1G,2BAAOD,QAAQ,YAAf,YACA,2BAAOJ,KAAK,WAAWC,KAAK,SAASI,MAAOzC,EAAUuC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACtB,SAA2B,EAAjB2B,EAAEe,OAAOD,UACvG,2BAAOD,QAAQ,oBAAf,qBACA,2BAAOJ,KAAK,mBAAmBC,KAAK,OAAOI,MAAOxB,EAAkBsB,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACL,iBAAkBU,EAAEe,OAAOD,UAC7H,2BAAOD,QAAQ,mBAAf,oBACA,2BAAOJ,KAAK,kBAAkBC,KAAK,OAAOI,MAAOzG,EAAiBuG,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACtF,gBAAiB2F,EAAEe,OAAOD,UAC1H,2BAAOD,QAAQ,aAAf,cACA,2BAAOJ,KAAK,YAAYC,KAAK,OAAOI,MAAOxC,EAAWsC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACrB,UAAW0B,EAAEe,OAAOD,UACxG,2BAAOD,QAAQ,uBAAf,yBACA,2BAAOJ,KAAK,sBAAsBC,KAAK,OAAOI,MAAOvC,EAAqBqC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACpB,oBAAqByB,EAAEe,OAAOD,UACtI,2BAAOD,QAAQ,oBAAf,qBACA,2BAAOJ,KAAK,mBAAmBO,UAAWnC,EAAgB6B,KAAK,SAASI,MAAOjC,EAAiBL,EAAmB,EAAGoC,SAAUZ,GAAK7E,KAAKwE,SAAS,CAACnB,iBAAmC,EAAjBwB,EAAEe,OAAOD,cAQxL7B,QClHfgC,IAASjD,OAAO,kBAAC,EAAD,MAASkD,SAASC,eAAe,W","file":"static/js/main.393da0a0.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass QueryMeter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      degrees: 0,\n      percentage: 0,\n      roundedPercentage: 0,\n      maxHits: 0,\n      totalHits: 0,\n      style: this.getStyles(this.props)\n    };\n  }\n\n  getStyles(props) {\n    let styles = {\n      container: {\n        overflow: \"hidden\",\n        padding: props.containerSpacing || 0,\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n        position: \"relative\",\n        background: props.backgroundColor,\n        borderRadius: `${props.width * 2}px ${props.width * 2}px 0 0`,\n        minHeight: !props.showPercentage ? `${props.width / 2 - props.containerSpacing}px` : `${props.width / 2}px`,\n        maxHeight: !props.showPercentage ? `${props.width / 2 - props.containerSpacing}px` : `${props.width / 2}px`\n      },\n      wrapper: {\n        width: props.width,\n        minHeight: props.width / 2,\n        maxHeight: props.width / 2,\n        position: \"relative\",\n        borderRadius: `${props.width * 2}px ${props.width * 2}px 0 0`\n      },\n      bottomLayer: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        background: props.fillBackgroundColor,\n        borderRadius: `${props.width * 2}px ${props.width * 2}px 0 0`,\n        width: props.width,\n        height: props.width / 2,\n        zIndex: 1\n      },\n      colorLayer: {\n        position: \"absolute\",\n        top: props.width / 2,\n        left: 0,\n        background: props.fillColor,\n        borderRadius: `0 0 ${props.width * 2}px ${props.width * 2}px`,\n        width: props.width,\n        height: props.width / 2,\n        zIndex: 2,\n        transformOrigin: \"50% 0%\",\n        transitionTimingFunction: props.transitionTiming,\n        transitionProperty: \"all\",\n        transitionDuration: `${props.duration}ms`\n      },\n      coverLayer: {\n        position: \"absolute\",\n        bottom: 0,\n        left: \"50%\",\n        background: props.backgroundColor,\n        borderRadius: `${props.width * 2}px ${props.width * 2}px 0 0`,\n        width: props.width - props.thickness * 2,\n        height: props.width / 2 - props.thickness,\n        transform: \"translate(-50%, 0)\",\n        zIndex: 4\n      },\n      bottomCoverLayer: {\n        height: props.containerSpacing,\n        background: props.backgroundColor,\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: `0 ${props.containerSpacing}px`,\n        zIndex: 2,\n        display: props.showPercentage ? \"block\" : \"none\"\n      },\n      seperator: {\n        position: \"absolute\",\n        bottom: 0 - props.sliceGap / 2,\n        left: \"-2px\",\n        width: 2 + props.width / 2,\n        height: props.sliceGap,\n        zIndex: 3,\n        overflow: \"hidden\",\n        transformOrigin: \"100% 50% 0px\",\n        background: props.backgroundColor\n      },\n      percentage: {\n        transform: \"rotate(-90deg)\",\n        position: \"absolute\",\n        top: 0,\n        width: 40,\n        left: -36,\n        fontSize: 12,\n        textAlign: \"center\",\n        transformOrigin: \"50% 0% 0px\",\n        cursor: \"default\"\n      },\n      detailsContainer: {\n        flex: 1,\n        height: \"100%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        display: \"flex\",\n        fontSize: 12,\n        paddingTop: 7\n      },\n      labelText: {\n        fontSize: 13,\n        color: \"#4e4e4e\"\n      },\n      labelNumber: {\n        fontWeight: 800,\n        fontSize: 13,\n        color: \"#4e4e4e\"\n      }\n    };\n\n    return styles;\n  }\n\n  refresh(props) {\n    if (this.isUnmounted) return;\n    let style = this.getStyles(props);\n    let maxHits = props.maxHits;\n    let strengthMode = props.strengthMode;\n    let totalHits = props.totalHits || 0;\n    let percentage =\n      totalHits === 1\n        ? 100\n        : totalHits === 0\n        ? 0\n        : strengthMode\n        ? 100 - (totalHits / maxHits) * 100\n        : (totalHits / maxHits) * 100;\n    if (percentage < 0 || !percentage) percentage = 0;\n    let roundedPercentage = Math.floor(percentage);\n    if (props.getPercentage) props.getPercentage(roundedPercentage);\n    let degrees = (180 * roundedPercentage) / 100;\n\n    this.setState({\n      percentage,\n      roundedPercentage,\n      degrees,\n      maxHits,\n      totalHits,\n      style\n    });\n  }\n\n  componentDidMount() {\n    let arrayOfnumbersToAnimate = this.getInfoData();\n    arrayOfnumbersToAnimate = arrayOfnumbersToAnimate.concat(this.getPercentageData());\n    this.triggerAnimation(arrayOfnumbersToAnimate);\n  }\n\n  getInfoData() {\n    let infoData = [];\n    infoData.push(\n      {\n        element: this.refs.totalHits,\n        state: \"totalHits\",\n        previous: 0,\n        current: 0\n      },\n      {\n        element: this.refs.maxHits,\n        state: \"maxHits\",\n        previous: 0,\n        current: 0\n      }\n    );\n    return infoData;\n  }\n\n  getPercentageData() {\n    let percentageData = [];\n    percentageData.push({\n      element: this.refs.percentage,\n      state: \"percentage\",\n      previous: 0,\n      current: 0\n    });\n    return percentageData;\n  }\n  \n  triggerAnimation(arrayOfnumbersToAnimate) {\n    this.initElementsOfNumbers(arrayOfnumbersToAnimate);\n    this.refresh(this.props);\n    this.animateNumbers(arrayOfnumbersToAnimate);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let conditionalProps = [\"topText\", \"bottomText\"];\n    for (let i = 0; i < conditionalProps.length; i++) {\n      if (this.props[conditionalProps[i]] !== nextProps[conditionalProps[i]])\n        return true;\n    }\n\n    let conditionalState = [\"maxHits\", \"totalHits\", \"degrees\"];\n    for (let i = 0; i < conditionalState.length; i++) {\n      if (nextProps[conditionalState[i]] !== nextState[conditionalState[i]])\n        return true;\n    }\n    return false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      if(prevProps.showInfo !== this.props.showInfo) this.triggerAnimation(this.getInfoData());\n      if(prevProps.showPercentage !== this.props.showPercentage) this.triggerAnimation(this.getPercentageData());\n      this.refresh(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  initElementsOfNumbers(arrayOfnumbersToAnimate) {\n    // initialize the objects to animate\n    arrayOfnumbersToAnimate.forEach(obj => {\n      if(!obj.element) return;\n      obj.element.innerHTML = obj.current.toLocaleString();\n      obj.next = this.state[obj.state];\n      obj.startTime = Date.now();\n    });\n  }\n\n  animateNumbers(array) {\n    var myReq;\n    var progress = Date.now();\n    let step = (timestamp) => {\n      array.forEach(obj => {\n        if(!obj.element) return;\n        // the target has changed\n        if (obj.next !== this.state[obj.state]) {\n          // the new target is the same as the previous origin\n          if (obj.previous === this.state[obj.state]) {\n            // calculate and use the time that passed (to mimic the way \"transform\" works)\n            var span = obj.next - obj.previous; // the total range\n            var position = span ? (obj.next - obj.current || span) / span : 0; // the fraction of the progress\n            obj.startTime = Date.now() - this.props.duration * position;\n\n            obj.previous = obj.next;\n            obj.next = this.state[obj.state];\n          }\n\n          // the new target is different than the previous origin,\n          else {\n            // use the current duration\n            obj.startTime = Date.now();\n\n            obj.previous = obj.current;\n            obj.next = this.state[obj.state];\n          }\n        }\n\n        // the target has not changed\n        if (obj.current == obj.next) {\n          // reset variables and return\n          obj.startTime = Date.now();\n          obj.previous = obj.next;\n          return;\n        }\n\n        // calculate the current value\n        var timespan = Date.now() - obj.startTime; // the time that passed\n        var positionInTime = Math.min(\n          timespan / (this.props.duration || timespan),\n          1\n        ); // the fraction of the progress in time units\n        var progress = (obj.next - obj.previous) * positionInTime; // the progress\n        obj.current = obj.previous + progress; // the current value\n        obj.element.innerHTML = Math.round(obj.current).toLocaleString();\n      });\n\n      myReq = window.requestAnimationFrame(step);\n    };\n    myReq = window.requestAnimationFrame(step);\n  }\n\n  renderSlices() {\n    let arrayOfSlices = [];\n\n    for (let i = 1; i < this.props.slices; i++) {\n      arrayOfSlices.push(\n        <div\n          key={i}\n          style={{\n            ...this.state.style.seperator,\n            transform: `rotate(${(180 / this.props.slices) * i}deg)`\n          }}\n        />\n      );\n    }\n\n    return arrayOfSlices;\n  }\n\n  renderPercentage() {\n    if (!this.props.showPercentage) return;\n    return (\n      <div\n        data-auto=\"percentage\"\n        style={{\n          ...this.state.style.percentage,\n          ...this.props.percentageStyle\n        }}\n        title={this.state.percentage + \"%\"}\n      >\n        <span ref=\"percentage\" />%\n      </div>\n    );\n  }\n\n  renderInfo() {\n    if (!this.props.showInfo) return;\n    return (\n        <div style={{\n          ...this.state.style.detailsContainer,\n          ...this.props.infoContainerStyle\n        }}>\n            <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n                <span\n                    data-auto=\"selected-entity-type\"\n                    style={{\n                    ...this.state.style.labelText,\n                    ...this.props.infoTextStyle,\n                    textAlign: \"center\"\n                    }}\n                >\n                    {this.props.topText}\n                </span>\n                <span\n                    data-auto=\"hits\"\n                    ref=\"totalHits\"\n                    style={{\n                    ...this.state.style.labelNumber,\n                    ...this.props.infoNumbersStyle\n                    }}\n                />\n                </div>\n                <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n                <span\n                    style={{\n                    ...this.state.style.labelText,\n                    ...this.props.infoTextStyle\n                    }}\n                >\n                    {this.props.bottomText}\n                </span>\n                <span\n                    data-auto=\"all-from-type\"\n                    ref=\"maxHits\"\n                    style={{\n                    ...this.state.style.labelNumber,\n                    ...this.props.infoNumbersStyle\n                    }}\n                />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n      return (\n        <div style={this.state.style.container}>\n            <div style={this.state.style.wrapper}>\n              <div style={this.state.style.bottomLayer}></div>\n              <div\n                  style={{\n                  ...this.state.style.colorLayer,\n                  transform: `rotate(${this.state.degrees}deg)`\n                  }}\n              >\n                  {this.renderPercentage()}\n              </div>\n              <div style={this.state.style.coverLayer}>{this.renderInfo()}</div>\n                  <div>{this.renderSlices()}</div>\n              </div>\n            <div style={this.state.style.bottomCoverLayer}></div>\n        </div>\n      );\n    }\n}\n\nQueryMeter.defaultProps = {\n  width: 200,\n  thickness: 25,\n  slices: 6,\n  sliceGap: 2,\n  duration: 1000,\n  transitionTimingFunction: \"ease-in-out\",\n  backgroundColor: \"#fff\",\n  fillColor:\n    \"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\",\n  fillBackgroundColor: \"#eee\",\n  containerSpacing: 20,\n  strengthMode: true,\n  percentageStyle: {},\n  infoNumbersStyle: {},\n  infoTextStyle: {},\n  showInfo: true,\n  showPercentage: true,\n  topText: \"Total Hits: \",\n  bottomText: \"Max Hits: \",\n  firstAnimationDelay: 0,\n  totalHits: 400,\n  maxHits: 1000\n};\n\nexport default QueryMeter;","import React, { Component } from 'react'\n\nimport QueryMeter from 'react-query-meter'\nimport 'react-query-meter/dist/index.css'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isStrengthMode: true,\n            totalHits: 0,\n            maxHits: 0,\n            width: 240,\n            thickness: 30,\n            slices: 8, \n            slicesGap: 5,\n            duration: 1000,\n            transitionTiming: \"cubic-bezier(.17,.67,.83,.67)\",\n            backgroundColor: \"#3f1f71\",\n            fillColor: \"linear-gradient(316deg, #f42b03 0%, #ffbe0b 74%)\",\n            fillBackgroundColor: \"#eee\",\n            containerSpacing: 20,\n            showInfo: true,\n            showPercentage: true\n        };\n    }\n\n    randomizeResults(_this) {\n        let maxHits = Math.floor(Math.random() * 10001);\n        let totalHits = Math.floor(Math.random() * maxHits);\n        _this.setState({ totalHits, maxHits });\n    }\n\n    render() {\n        const { \n            totalHits, \n            maxHits, \n            isStrengthMode, \n            width, \n            thickness, \n            slices, \n            slicesGap,\n            duration,\n            transitionTiming,\n            backgroundColor,\n            fillColor,\n            fillBackgroundColor,\n            containerSpacing,\n            showInfo,\n            showPercentage\n        } = this.state;\n    \n        return (\n            <div style={{display: 'block', width: '100%', textAlign: 'center'}}>\n                <div style={{ display: \"inline-flex\", flexDirection: \"column\", padding: '10px 20px 20px', boxShadow: '1px 1px 2px 1px rgb(0 0 0 / 0.3)', borderRadius: 6, background: '#3f1f71' }}>\n                    <QueryMeter\n                        totalHits={totalHits}\n                        maxHits={maxHits}\n                        width={width}\n                        thickness={thickness}\n                        slices={slices}\n                        sliceGap={slicesGap}\n                        duration={duration}\n                        transitionTiming={transitionTiming}\n                        backgroundColor={backgroundColor || \"#fff\"}\n                        fillColor={fillColor}\n                        fillBackgroundColor={fillBackgroundColor}\n                        containerSpacing={containerSpacing}\n                        strengthMode={isStrengthMode}\n                        showInfo={showInfo}\n                        showPercentage={showPercentage}\n                        topText=\"Total Hits:&nbsp;\"\n                        bottomText=\"Max Hits:&nbsp;\"\n                        percentageStyle={{color: '#fff'}}\n                        infoNumbersStyle={{color: '#fff'}}\n                        infoTextStyle={{color: '#fff'}}\n                    />\n                    <button style={{background: '#ff5f22', fontSize: 12, margin: '20px auto', border: '5px solid #fff', cursor: 'pointer', padding: 10, outline: 'none', width: 110, height: 110, borderRadius: '50%', boxShadow: '-2px 6px 6px 1px rgb(0 0 0 / 0.3)'}} onClick={e => this.randomizeResults(this)}><svg id=\"Capa_1\" enable-background=\"new 0 0 512 512\" height=\"30\" viewBox=\"0 0 512 512\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\"><g><circle cx=\"362\" cy=\"150\" r=\"15\"/><circle cx=\"304.068\" cy=\"92.068\" r=\"15\"/><circle cx=\"419.926\" cy=\"207.926\" r=\"15\"/><path d=\"m467 0h-210c-24.813 0-45 20.187-45 45v83.993c-5.748-2.6-12.031-3.979-18.529-3.979-12.02 0-23.321 4.681-31.82 13.181l-148.492 148.493c-17.544 17.546-17.544 46.094 0 63.64l148.493 148.492c8.499 8.5 19.8 13.181 31.82 13.181s23.32-4.681 31.819-13.181l148.493-148.492c13.584-13.586 16.642-33.764 9.189-50.327h84.027c24.813 0 45-20.187 45-45v-210.001c0-24.813-20.187-45-45-45zm-114.43 329.114-148.492 148.492c-2.833 2.833-6.6 4.394-10.606 4.394-4.007 0-7.773-1.561-10.607-4.394l-148.493-148.492c-5.849-5.849-5.849-15.365 0-21.214l148.493-148.492c2.833-2.833 6.6-4.394 10.607-4.394 4.006 0 7.773 1.561 10.606 4.394l148.492 148.492c5.849 5.849 5.849 15.366 0 21.214zm129.43-74.114c0 8.271-6.729 15-15 15h-109.904l-115.096-115.095v-109.905c0-8.271 6.729-15 15-15h210c8.271 0 15 6.729 15 15z\"/><circle cx=\"204.078\" cy=\"244.261\" r=\"15\"/><circle cx=\"119.225\" cy=\"329.114\" r=\"15\"/><circle cx=\"161.651\" cy=\"286.688\" r=\"15\"/><circle cx=\"267.717\" cy=\"307.901\" r=\"15\"/><circle cx=\"182.864\" cy=\"392.754\" r=\"15\"/><circle cx=\"225.291\" cy=\"350.327\" r=\"15\"/></g></svg>RANDOMIZE</button>\n                    <div style={{display: 'flex', flexDirection: 'column', fontSize: 14}}>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <input name=\"strengthMode\" type=\"checkbox\" checked={isStrengthMode} onChange={e => this.setState({isStrengthMode: !isStrengthMode})} />\n                            <label htmlFor=\"strengthMode\">&nbsp;&nbsp;Strength Mode</label>\n                        </div>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <input name=\"showInfo\" type=\"checkbox\" checked={showInfo} onChange={e => this.setState({showInfo: !showInfo})} />\n                            <label htmlFor=\"showInfo\">&nbsp;&nbsp;Show-Info</label>\n                        </div>\n                        <div style={{display: 'flex', alignItems: 'center'}}>\n                            <input name=\"showPercentage\" type=\"checkbox\" checked={showPercentage} onChange={e => this.setState({showPercentage: !showPercentage})} />\n                            <label htmlFor=\"showPercentage\">&nbsp;&nbsp;Show-Percentage</label>\n                        </div>\n                        <br />\n                        <label htmlFor=\"width\">Width</label>\n                        <input name=\"width\" type=\"number\" value={width} onChange={e => this.setState({width: e.target.value * 1})} />\n                        <label htmlFor=\"thickness\">Thickness</label>\n                        <input name=\"thickness\" type=\"number\" value={thickness} onChange={e => this.setState({thickness: e.target.value * 1})} />\n                        <label htmlFor=\"slices\">Slices</label>\n                        <input name=\"slices\" type=\"number\" value={slices} onChange={e => this.setState({slices: e.target.value * 1})} />\n                        <label htmlFor=\"slicesGap\">Slices-Gap</label>\n                        <input name=\"slicesGap\" type=\"number\" value={slicesGap} onChange={e => this.setState({slicesGap: e.target.value * 1})} />\n                        <label htmlFor=\"duration\">Duration</label>\n                        <input name=\"duration\" type=\"number\" value={duration} onChange={e => this.setState({duration: e.target.value * 1})} />\n                        <label htmlFor=\"transitionTiming\">Transition-Timing</label>\n                        <input name=\"transitionTiming\" type=\"text\" value={transitionTiming} onChange={e => this.setState({transitionTiming: e.target.value})} />\n                        <label htmlFor=\"backgroundColor\">Background-Color</label>\n                        <input name=\"backgroundColor\" type=\"text\" value={backgroundColor} onChange={e => this.setState({backgroundColor: e.target.value})} />\n                        <label htmlFor=\"fillColor\">Fill-Color</label>\n                        <input name=\"fillColor\" type=\"text\" value={fillColor} onChange={e => this.setState({fillColor: e.target.value})} />\n                        <label htmlFor=\"fillBackgroundColor\">Fill-Background-Color</label>\n                        <input name=\"fillBackgroundColor\" type=\"text\" value={fillBackgroundColor} onChange={e => this.setState({fillBackgroundColor: e.target.value})} />\n                        <label htmlFor=\"containerSpacing\">Container-Spacing</label>\n                        <input name=\"containerSpacing\" disabled={!showPercentage} type=\"number\" value={showPercentage ? containerSpacing : 0} onChange={e => this.setState({containerSpacing: e.target.value * 1})} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}